---
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: pipeline-test
spec:
  inputs:
    resources:
      - name: plumbing-git
        type: git
      - name: tektoncd-pipeline-git
        type: git
    params:
    - name: IMAGE_NAME
      description: The bootstrap image with all the tools needed
    - name: UPLOADER_HOST
      description: GO Simple Uploader hostname
    - name: CLUSTER_NAME
      description: Cluster name
  steps:
  - name: apply-patches
    image: $(inputs.params.IMAGE_NAME)
    workingDir: $(inputs.resources.tektoncd-pipeline-git.path)
    script: |
      #!/usr/bin/env bash
      set -eu
      if [[ -d "$(inputs.resources.plumbing-git.path)/CI/tasks/components/pipeline/patches" ]];then
        for patch in $(inputs.resources.plumbing-git.path)/CI/tasks/components/pipeline/patches/*;do
            [[ ${patch} != *patch && ${patch} != *diff ]] && continue
            echo "Applying patch $(basename ${patch})"
            patch -p1 -i ${patch}
        done
      fi
  - name: get-kubeconfig
    env:
    - name: UPLOADER_USERNAME
      valueFrom:
        secretKeyRef:
          name: openshift-install
          key: uploader-username
    - name: UPLOADER_PASSWORD
      valueFrom:
        secretKeyRef:
          name: openshift-install
          key: uploader-password
    image: registry.access.redhat.com/ubi8/ubi-minimal:latest
    script: |
      #!/usr/bin/env bash
      set -eu
      mkdir -p /workspace/kube
      curl -o /workspace/kube/config \
           -u ${UPLOADER_USERNAME}:${UPLOADER_PASSWORD} \
           $(inputs.params.UPLOADER_HOST)/private/CI/$(inputs.params.CLUSTER_NAME)/kubeconfig
  - name: go-tests
    image: $(inputs.params.IMAGE_NAME)
    env:
      - name: KUBECONFIG
        value: /workspace/kube/config
    workingDir: $(inputs.resources.tektoncd-pipeline-git.path)
    command: ["$(inputs.resources.plumbing-git.path)/CI/tasks/components/pipeline/run-go-test.sh"]
  - name: yaml-tests
    image: $(inputs.params.IMAGE_NAME)
    workingDir: $(inputs.resources.tektoncd-pipeline-git.path)
    env:
      - name: KUBECONFIG
        value: /workspace/kube/config
    command: ["$(inputs.resources.plumbing-git.path)/CI/tasks/components/pipeline/run-yaml-test.sh"]
